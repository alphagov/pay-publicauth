server:
  applicationConnectors:
    - type: http
      port: ${PORT}
  adminConnectors:
    - type: http
      port: ${ADMIN_PORT}

logging:
    level: ERROR
    appenders:
      - type: console
        threshold: ALL
        timeZone: UTC
        target: stdout
        logFormat: "[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] %highlight(%-5level) %cyan(%logger{15}) - %msg %n"

database:
  driverClass: org.postgresql.Driver
  user: ${DB_USER}
  password: ${DB_PASSWORD}
  url: jdbc:postgresql://${DB_HOST}:5432/publicauth?sslfactory=uk.gov.pay.publicauth.util.TrustingSSLSocketFactory&${DB_SSL_OPTION}

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 30s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* pay-publicauth Health Check */ SELECT 1"

  # the timeout before a connection validation queries fail
  validationQueryTimeout: 3s

  # The initial size of the connection pool
  initialSize: 4

  # the minimum number of connections to keep open
  minSize: 4

  # the maximum number of connections to keep open
  maxSize: 8

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

  # whether or not connections should be validated before borrowing from the pool
  checkConnectionOnBorrow: true

  # the amount of time to sleep between runs of the idle connection validation, abandoned cleaner and idle pool resizing
  evictionInterval: 10s

  # the minimum amount of time an connection must sit idle in the pool before it is eligible for eviction
  minIdleTime: 1 minute

tokensConfig:
  encryptDBSalt: ${TOKEN_DB_BCRYPT_SALT}
  apiKeyHmacSecret: ${TOKEN_API_HMAC_SECRET}

graphiteHost: ${METRICS_HOST:-localhost}
graphitePort: ${METRICS_PORT:-8092}
